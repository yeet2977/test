local function Connect(Parent, Name, Function)
	local Signal = Parent[Name];
	if (Signal ~= nil) then
		local Table; do
			Table = setmetatable({},{
				__call = function(_, ...)
					return Function(...)
				end,
			});
		end

		local Connection;
		local Success, Error = pcall(function()
			Connection = Signal["Connect\0"](Signal, Table)
		end);

		return Connection
	end
	assert(Signal ~= nil, string.format("Signal not found for %s[%s]", tostring(Parent), Name))
end

local CurrentCallback = nil
local Method; do
	Method = setmetatable({}, {
		__call = function(_, ...)
			return (CurrentCallback and CurrentCallback(...) or ...)
		end,
	});
end

CurrentCallback = function(...)
	warn(...)
end

Method('hello', 1)
